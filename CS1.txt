1.ADD TWO NUMBERS

You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

solu:-class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        dummyHead = ListNode(0)
        tail = dummyHead
        carry = 0

        while l1 is not None or l2 is not None or carry != 0:
            digit1 = l1.val if l1 is not None else 0
            digit2 = l2.val if l2 is not None else 0

            sum = digit1 + digit2 + carry
            digit = sum % 10
            carry = sum // 10

            newNode = ListNode(digit)
            tail.next = newNode
            tail = tail.next

            l1 = l1.next if l1 is not None else None
            l2 = l2.next if l2 is not None else None

        result = dummyHead.next
        dummyHead.next = None
        return result

2)PALINDROME NUMBER
Given an integer x, return true if x is a palindrome, and false otherwise.

solu:-class Solution:
    def isPalindrome(self, x: int) -> bool:
        if x < 0:
            return False

        reversed_num = 0
        temp = x

        while temp != 0:
            digit = temp % 10
            reversed_num = reversed_num * 10 + digit
            temp //= 10

        return reversed_num == x

3)LENGTH OF LAST WORD

Given a string s consisting of words and spaces, return the length of the last word in the string.

A word is a maximal substring consisting of non-space characters only.
solu:-class Solution:
    def lengthOfLastWord(self, s: str) -> int:
        stripped = s.strip()
        strList = stripped.split(" ")
        lastWord = strList[-1]
        return len(lastWord)

4)Python Program for Simple Interest
solu:-def simple_interest(p,t,r):
    print('The principal is', p)
    print('The time period is', t)
    print('The rate of interest is',r)
     
    si = (p * t * r)/100
     
    print('The Simple Interest is', si)
    return si
     
# Driver code
simple_interest(8, 6, 8)

5)Python Program to Check Armstrong Number
solu:-def power(x, y):
     
    if y == 0:
        return 1
    if y % 2 == 0:
        return power(x, y // 2) * power(x, y // 2)
         
    return x * power(x, y // 2) * power(x, y // 2)
 
def order(x):
 
    n = 0
    while (x != 0):
        n = n + 1
        x = x // 10
         
    return n

def isArmstrong(x):
     
    n = order(x)
    temp = x
    sum1 = 0
     
    while (temp != 0):
        r = temp % 10
        sum1 = sum1 + power(r, n)
        temp = temp // 10
 
    return (sum1 == x)
 
x = 153
print(isArmstrong(x))
 
x = 1253
print(isArmstrong(x))

6)Program to print ASCII Value of a character
solu:-c = 'g'
print("The ASCII value of '" + c + "' is", ord(c)) 
 
7)Python Program to Find Largest Element in an Array
solu:-def largest(arr, n):
 
    max = arr[0]

    for i in range(1, n):
        if arr[i] > max:
            max = arr[i]
    return max

arr = [10, 324, 45, 90, 9808]
n = len(arr)
Ans = largest(arr, n)
print("Largest in given array ", Ans)

7)Python Program to Check Prime Number
solu:-num = 11
if num > 1:
   
    for i in range(2, int(num/2)+1):
        if (num % i) == 0:
            print(num, "is not a prime number")
            break
    else:
        print(num, "is a prime number")
else:
    print(num, "is not a prime number")

8)Python Program to Find Area of a Circle
solu:-def findArea(r):
    PI = 3.142
    return PI * (r*r);
 
print("Area is %.6f" % findArea(5));

9)Python Program to Find the Factorial of a Number
solu:-def factorial(n):
     
    return 1 if (n==1 or n==0) else n * factorial(n - 1) 

num = 5
print("Factorial of",num,"is",factorial(num))

10)Python Program to Find Sum of Array
solu:-def _sum(arr):

    sum = 0
    for i in arr:
        sum = sum + i
 
    return(sum)
  
if __name__ == "__main__":
    
    arr = [12, 3, 4, 15]
    n = len(arr)
    ans = _sum(arr)
    print('Sum of the array is ', ans)